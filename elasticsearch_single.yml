apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  type: NodePort
  ports:
    - port: 9200
      name: http
      targetPort: 9200
      nodePort: 30100
    - port: 9300
      name: transport
      targetPort: 9300
      nodePort: 30101
  selector:
    app: elasticsearch


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      volumes:
        - name: es-pv
          hostPath:
            path: /mnt/data/elasticsearch
            type: Directory
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
          resources:
            requests:
              memory: 512Mi
              cpu: 0.25
            limits:
              memory: 1Gi
              cpu: 0.5
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
          env:
            - name: discovery.type
              value: "single-node"
            - name: cluster.name
              value: "elasticsearch"
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: xpack.security.enabled
              value: "false"
            - name: xpack.security.transport.ssl.enabled
              value: "false"
            - name: xpack.security.http.ssl.enabled
              value: "false"
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: es-pv
          securityContext:
            runAsUser: 999

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:8.14.3
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"

---

apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  ports:
    - port: 5601
      targetPort: 5601
  selector:
    app: kibana
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:8.14.3
          volumeMounts:
            - name: logstash-config
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
          ports:
            - containerPort: 5000
              name: tcp
            - containerPort: 5044
              name: beats
          env:
            - name: ELASTICSEARCH_HOST
              value: "http://elasticsearch:9200"
      volumes:
        - name: logstash-config
          configMap:
            name: logstash-config

---

apiVersion: v1
kind: Service
metadata:
  name: logstash
  labels:
    app: logstash
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
      name: tcp
      nodePort: 31501
    - port: 5044
      targetPort: 5044
      name: beats
      nodePort: 31502
  selector:
    app: logstash

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
data:
  logstash.conf: |
    input {
      tcp {
        port => 5044
        codec => json_lines
      }
      tcp {
        port => 5000
        codec => json_lines
      }
    }
    output {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        manage_template => true
        index => "%{[fields][app]}"
      }
    }
